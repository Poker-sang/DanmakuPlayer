<Grid
    x:Class="DanmakuPlayer.Views.Controls.BackgroundPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:FluentIcons.Common"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:DanmakuPlayer.Views.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fluent="using:FluentIcons.WinUI"
    xmlns:local="using:DanmakuPlayer.Views.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xaml="using:Microsoft.Graphics.Canvas.UI.Xaml"
    DoubleTapped="MaximizeRestoreTapped"
    Loaded="RootLoaded"
    PointerReleased="GridOnPointerReleased"
    SizeChanged="RootSizeChanged"
    Unloaded="RootUnloaded"
    mc:Ignorable="d">
    <Grid.Resources>
        <Color x:Key="TransparentColor">#7F000000</Color>
        <converters:DoubleToTimeTextConverter x:Key="DoubleToTimeTextConverter" />
    </Grid.Resources>
    <Grid.RowDefinitions>
        <RowDefinition Height="*" />
        <RowDefinition Height="4*" />
        <RowDefinition Height="*" />
    </Grid.RowDefinitions>
    <local:WebView2ForVideo
        x:Name="WebView"
        Grid.Row="0"
        Grid.RowSpan="3"
        x:FieldModifier="public"
        IsHitTestVisible="{x:Bind local:C.Negation(Vm.LockWebView2), Mode=OneWay}"
        KeyboardAcceleratorPlacementMode="Hidden"
        Url="{x:Bind Vm.Url, Mode=TwoWay}"
        VideoLoaded="WebViewOnPageLoaded"
        Visibility="{x:Bind local:C.ToVisibility(Vm.EnableWebView2), Mode=OneWay}"
        Duration="{x:Bind Vm.Duration, Mode=TwoWay}" />
    <!--  留1px距离防止WebView2不渲染  -->
    <xaml:CanvasAnimatedControl
        x:Name="DanmakuCanvas"
        Grid.Row="0"
        Grid.RowSpan="3"
        Margin="0,0,0,1"
        CreateResources="DanmakuCanvasCreateResources"
        Draw="DanmakuCanvasDraw"
        IsHitTestVisible="False" />
    <local:CollapsibleArea Grid.Row="0" Grid.Column="2">
        <Grid>
            <Grid.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="{StaticResource TransparentColor}" />
                        <GradientStop Offset="1" Color="Transparent" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <CommandBar
                Grid.Row="0"
                Grid.Column="0"
                IsEnabled="{x:Bind local:C.Negation(Vm.LoadingDanmaku), Mode=OneWay}"
                OverflowButtonVisibility="Collapsed">
                <AppBarButton
                    x:Uid="/MainPanel/DownloadButton"
                    Icon="{fluent:SymbolIcon Symbol=ArrowDownload}"
                    Tapped="ImportTapped" />
                <AppBarButton
                    x:Uid="/MainPanel/OpenLocalButton"
                    Icon="{fluent:SymbolIcon Symbol=Code}"
                    Tapped="FileTapped" />
                <AppBarButton
                    x:Uid="/MainPanel/OpenLocalButton"
                    Icon="{fluent:SymbolIcon Symbol=PeopleLink}"
                    Tapped="RemoteTapped" />
            </CommandBar>
            <Grid
                Grid.Row="0"
                Grid.Column="1"
                Visibility="{x:Bind local:C.ToVisibility(Vm.EnableWebView2), Mode=OneWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CommandBar Grid.Column="0" OverflowButtonVisibility="Collapsed">
                    <AppBarButton
                        x:Uid="/MainPanel/GoBackButton"
                        DoubleTapped="UIElement_OnDoubleTapped"
                        Icon="{fluent:SymbolIcon Symbol=ArrowLeft}"
                        IsEnabled="{x:Bind WebView.CanGoBack, Mode=OneWay}"
                        Tapped="GoBackTapped" />
                </CommandBar>
                <AutoSuggestBox
                    x:Uid="/MainPanel/UriAutoSuggestBox"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    QueryIcon="{fluent:SymbolIcon Symbol=Search,
                                                  FontSize=16}"
                    QuerySubmitted="AddressBoxOnQuerySubmitted"
                    Text="{x:Bind WebView.Url, Mode=OneWay}" />
            </Grid>
            <CommandBar
                Grid.Row="0"
                Grid.Column="2"
                OverflowButtonVisibility="Collapsed">
                <AppBarButton
                    x:Uid="/MainPanel/TopmostButton"
                    DoubleTapped="UIElement_OnDoubleTapped"
                    Tapped="TopMostTapped">
                    <AppBarButton.Icon>
                        <fluent:SymbolIcon Symbol="{x:Bind local:C.SymbolSelector(Vm.TopMost, common:Symbol.Pin, common:Symbol.PinOff), Mode=OneWay}" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    x:Uid="/MainPanel/SettingsButton"
                    Icon="{fluent:SymbolIcon Symbol=Settings}"
                    Tapped="SettingTapped">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Escape" Invoked="SettingTapped" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton x:Uid="/MainPanel/MaximizeButton" Tapped="MaximizeRestoreTapped">
                    <AppBarButton.Icon>
                        <fluent:SymbolIcon Symbol="{x:Bind local:C.SymbolSelector(Vm.IsMaximized, common:Symbol.SquareMultiple, common:Symbol.Square), Mode=OneWay}" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    x:Uid="/MainPanel/CloseButton"
                    Icon="{fluent:SymbolIcon Symbol=Dismiss}"
                    Tapped="CloseTapped">
                    <AppBarButton.Resources>
                        <!--  ReSharper disable once Xaml.RedundantResource  -->
                        <SolidColorBrush x:Key="AppBarButtonBackgroundPointerOver" Color="Red" />
                        <!--  ReSharper disable once Xaml.RedundantResource  -->
                        <SolidColorBrush x:Key="AppBarButtonBackgroundPressed" Color="DarkRed" />
                    </AppBarButton.Resources>
                </AppBarButton>
            </CommandBar>
        </Grid>
    </local:CollapsibleArea>
    <local:CollapsibleArea Grid.Row="2">
        <controls:DockPanel LastChildFill="False">
            <controls:DockPanel.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="Transparent" />
                        <GradientStop Offset="1" Color="{StaticResource TransparentColor}" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </controls:DockPanel.Background>
            <controls:DockPanel controls:DockPanel.Dock="Bottom" LastChildFill="False">
                <CommandBar controls:DockPanel.Dock="Left" OverflowButtonVisibility="Collapsed">
                    <AppBarButton
                        x:Uid="/MainPanel/RewindButton"
                        Width="40"
                        DoubleTapped="UIElement_OnDoubleTapped"
                        Icon="{fluent:SymbolIcon Symbol=Rewind}"
                        RightTapped="RewindTapped"
                        Tapped="RewindTapped">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Left" Invoked="RewindTapped" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton
                        x:Uid="/MainPanel/PlayPauseButton"
                        Width="40"
                        DoubleTapped="UIElement_OnDoubleTapped"
                        Tapped="PauseResumeTapped">
                        <AppBarButton.Icon>
                            <fluent:SymbolIcon Symbol="{x:Bind local:C.SymbolSelector(Vm.IsPlaying, common:Symbol.Pause, common:Symbol.Play), Mode=OneWay}" />
                        </AppBarButton.Icon>
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Space" Invoked="PauseResumeTapped" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton
                        x:Uid="/MainPanel/FastForwardButton"
                        Width="40"
                        DoubleTapped="UIElement_OnDoubleTapped"
                        Icon="{fluent:SymbolIcon Symbol=FastForward}"
                        RightTapped="FastForwardTapped"
                        Tapped="FastForwardTapped">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Right" Invoked="FastForwardTapped" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                </CommandBar>
                <Grid
                    x:Uid="/MainPanel/TimeEditGrid"
                    Margin="10,0"
                    controls:DockPanel.Dock="Left"
                    Background="Transparent"
                    Tapped="TimeTextTapped">
                    <StackPanel
                        Margin="0"
                        Orientation="Horizontal"
                        Spacing="5"
                        Visibility="{x:Bind local:C.ToVisibilityNegation(Vm.EditingTime), Mode=OneWay}">
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="{x:Bind local:C.ToTimeString(Vm.Time), Mode=OneWay}"
                            TextAlignment="Right" />
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="-"
                            TextAlignment="Center" />
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="{x:Bind local:C.ToTimeString(Vm.TotalTime), Mode=OneWay}"
                            TextAlignment="Left" />
                    </StackPanel>
                    <TextBox
                        x:Name="TimeText"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AcceptsReturn="False"
                        IsEnabled="{x:Bind Vm.EditingTime, Mode=OneWay}"
                        IsEnabledChanged="TimeTextIsEditing"
                        KeyboardAcceleratorPlacementMode="Hidden"
                        LostFocus="TimeTextLostFocus"
                        TextAlignment="Center"
                        Visibility="{x:Bind local:C.ToVisibility(Vm.EditingTime), Mode=OneWay}">
                        <TextBox.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Enter" Invoked="TimeTextInvoked" />
                        </TextBox.KeyboardAccelerators>
                    </TextBox>
                </Grid>
                <ProgressRing controls:DockPanel.Dock="Left" IsActive="{x:Bind WebView.IsLoading, Mode=OneWay}" />
                <CommandBar
                    controls:DockPanel.Dock="Left"
                    DefaultLabelPosition="Right"
                    OverflowButtonVisibility="Collapsed">
                    <AppBarButton
                        x:Uid="/MainPanel/AdvanceDanmakuButton"
                        Width="40"
                        DoubleTapped="UIElement_OnDoubleTapped"
                        Icon="{fluent:SymbolIcon Symbol=ArrowReply}"
                        LabelPosition="Collapsed"
                        RightTapped="AdvanceDanmakuTapped"
                        Tapped="AdvanceDanmakuTapped" />
                    <AppBarButton
                        x:Uid="/MainPanel/SyncDanmakuButton"
                        DoubleTapped="UIElement_OnDoubleTapped"
                        Icon="{fluent:SymbolIcon Symbol=ArrowRepeatAll}"
                        Label="{x:Bind Vm.DanmakuDelayTime.TotalSeconds, Mode=OneWay}"
                        Tapped="SyncDanmakuTapped" />
                    <AppBarButton
                        x:Uid="/MainPanel/DelayDanmakuButton"
                        Width="40"
                        DoubleTapped="UIElement_OnDoubleTapped"
                        Icon="{fluent:SymbolIcon Symbol=ArrowForward}"
                        LabelPosition="Collapsed"
                        RightTapped="DelayDanmakuTapped"
                        Tapped="DelayDanmakuTapped" />
                </CommandBar>

                <CommandBar
                    controls:DockPanel.Dock="Right"
                    DefaultLabelPosition="Collapsed"
                    OverflowButtonVisibility="Collapsed"
                    Visibility="{x:Bind local:C.ToVisibility(Vm.EnableWebView2), Mode=OneWay}">
                    <AppBarButton
                        x:Uid="/MainPanel/VideosButton"
                        Icon="{fluent:SymbolIcon Symbol=Video}"
                        Visibility="{x:Bind local:C.IsNotEmptyToVisibility(WebView.Videos), Mode=OneWay}">
                        <AppBarButton.Flyout>
                            <local:RadioMenuFlyout
                                ItemsSource="{x:Bind WebView.Videos}"
                                Placement="Top"
                                SelectedItem="{x:Bind WebView.CurrentVideo, Mode=TwoWay}"
                                SelectionChanged="CurrentVideoOnSelectionChanged" />
                        </AppBarButton.Flyout>
                    </AppBarButton>
                    <AppBarButton x:Uid="/MainPanel/VolumeButton" ToolTipService.ToolTip="{x:Bind Vm.Volume, Mode=OneWay}">
                        <AppBarButton.Icon>
                            <fluent:SymbolIcon Symbol="{x:Bind local:C.VolumeSymbolSelector(Vm.Mute, Vm.Volume), Mode=OneWay}" />
                        </AppBarButton.Icon>
                        <AppBarButton.Flyout>
                            <Flyout Placement="Top">
                                <StackPanel>
                                    <Slider
                                        MinHeight="100"
                                        HorizontalAlignment="Center"
                                        IsEnabled="{x:Bind local:C.Negation(Vm.Mute), Mode=OneWay}"
                                        Maximum="100"
                                        Minimum="0"
                                        Orientation="Vertical"
                                        StepFrequency="1"
                                        Value="{x:Bind Vm.Volume, Mode=TwoWay}" />
                                    <AppBarButton
                                        x:Uid="/MainPanel/MuteButton"
                                        Width="40"
                                        HorizontalAlignment="Center"
                                        LabelPosition="Collapsed"
                                        Tapped="MuteOnTapped">
                                        <AppBarButton.Icon>
                                            <fluent:SymbolIcon Symbol="{x:Bind local:C.VolumeSymbolSelector(Vm.Mute, Vm.Volume), Mode=OneWay}" />
                                        </AppBarButton.Icon>
                                    </AppBarButton>
                                </StackPanel>
                            </Flyout>
                        </AppBarButton.Flyout>
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Down" Invoked="VolumeDownTapped" />
                            <KeyboardAccelerator Key="Up" Invoked="VolumeUpTapped" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton
                        x:Uid="/MainPanel/SyncButton"
                        DoubleTapped="UIElement_OnDoubleTapped"
                        Icon="{fluent:SymbolIcon Symbol=ArrowSync}"
                        Tapped="LoadSyncOnTapped" />
                    <AppBarButton
                        x:Uid="/MainPanel/LockWebView2Button"
                        DoubleTapped="UIElement_OnDoubleTapped"
                        Tapped="LockWebView2OnTapped">
                        <AppBarButton.Icon>
                            <fluent:SymbolIcon Symbol="{x:Bind local:C.SymbolSelector(Vm.LockWebView2, common:Symbol.CursorHoverOff, common:Symbol.CursorHover), Mode=OneWay}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        x:Uid="/MainPanel/FullScreenButton"
                        DoubleTapped="UIElement_OnDoubleTapped"
                        Tapped="FullScreenOnTapped">
                        <AppBarButton.Icon>
                            <fluent:SymbolIcon Symbol="{x:Bind local:C.SymbolSelector(Vm.FullScreen, common:Symbol.ArrowMinimize, common:Symbol.ArrowMaximize), Mode=OneWay}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                </CommandBar>
                <CommandBar
                    controls:DockPanel.Dock="Right"
                    DefaultLabelPosition="Collapsed"
                    OverflowButtonVisibility="Collapsed">
                    <AppBarButton x:Uid="/MainPanel/PlaybackRateButton" ToolTipService.ToolTip="{x:Bind local:C.StringFormatter(Vm.PlaybackRate, '{0:0.0#}'), Mode=OneWay}">
                        <AppBarButton.Icon>
                            <fluent:SymbolIcon Symbol="{x:Bind local:C.PlaybackRateSymbolSelector(Vm.PlaybackRate), Mode=OneWay}" />
                        </AppBarButton.Icon>
                        <AppBarButton.Flyout>
                            <local:RadioMenuFlyout
                                Formatter="{}{0:0.0#}"
                                ItemsSource="{x:Bind _playbackRates}"
                                Placement="Top"
                                SelectedItem="{x:Bind Vm.PlaybackRate, Mode=TwoWay}"
                                SelectionChanged="PlaybackRateOnSelectionChanged" />
                        </AppBarButton.Flyout>
                    </AppBarButton>
                </CommandBar>
            </controls:DockPanel>
            <local:VideoSlider
                Margin="10,0"
                VerticalAlignment="Center"
                controls:DockPanel.Dock="Bottom"
                DoubleTapped="UIElement_OnDoubleTapped"
                IsTabStop="False"
                Maximum="{x:Bind Vm.TotalTime.TotalSeconds, Mode=OneWay}"
                Minimum="0"
                StepFrequency="0.1"
                ThumbToolTipValueConverter="{StaticResource DoubleToTimeTextConverter}"
                UserValue="{x:Bind local:C.ToSecondDouble(Vm.Time), BindBack=SecondToTimeSpan, Mode=TwoWay}"
                SliderManipulationCompleted="VideoSliderOnSliderManipulationCompleted"
                UserValueChangedByManipulation="VideoSliderOnUserValueChangedByManipulation" />
        </controls:DockPanel>
    </local:CollapsibleArea>
    <local:SettingsDialog x:Name="DialogSetting" Grid.Row="0" />
    <local:InputDialog x:Name="DialogInput" Grid.Row="0" />
    <local:RemoteDialog x:Name="DialogRemote" Grid.Row="0" />
    <TeachingTip x:Name="RootTeachingTip" Grid.Row="0" />
</Grid>
