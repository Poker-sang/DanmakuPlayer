<SwapChainPanel
    x:Class="DanmakuPlayer.Views.Controls.BackgroundPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:converters="using:DanmakuPlayer.Views.Converters"
    xmlns:ctkConverters="using:CommunityToolkit.WinUI.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:DanmakuPlayer.Views.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xaml="using:Microsoft.Graphics.Canvas.UI.Xaml"
    DoubleTapped="RootDoubleTapped"
    SizeChanged="RootSizeChanged"
    Unloaded="RootUnloaded"
    mc:Ignorable="d">
    <SwapChainPanel.Resources>
        <converters:DoubleToTimeTextConverter x:Key="DoubleToTimeTextConverter" />
        <converters:BoolToPlayPauseSymbolConverter x:Key="BoolToPlayPauseSymbolConverter" />
        <converters:BoolToPinUnPinSymbolConverter x:Key="BoolToPinUnPinSymbolConverter" />
        <converters:UIntToColorConverter x:Key="UIntToColorConverter" />
        <ctkConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <SolidColorBrush x:Key="Foreground" Color="{x:Bind _vm.Foreground, Converter={StaticResource UIntToColorConverter}, Mode=OneWay}" />
    </SwapChainPanel.Resources>
    <SwapChainPanel.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
    </SwapChainPanel.RowDefinitions>
    <SwapChainPanel.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="*" />
    </SwapChainPanel.ColumnDefinitions>
    <xaml:CanvasControl
        x:Name="DanmakuCanvas"
        Grid.Row="0"
        Grid.RowSpan="3"
        Grid.Column="0"
        Grid.ColumnSpan="3"
        CreateResources="DanmakuCanvasCreateResources"
        Draw="DanmakuCanvasDraw"
        KeyboardAcceleratorPlacementMode="Hidden"
        Opacity="{x:Bind _vm.DanmakuOpacity, Mode=OneWay}">
        <xaml:CanvasControl.KeyboardAccelerators>
            <KeyboardAccelerator Key="Escape" Invoked="SettingTapped" />
            <KeyboardAccelerator Key="Left" Invoked="RewindInvoked" />
            <KeyboardAccelerator Key="Right" Invoked="FastForwardInvoked" />
            <KeyboardAccelerator Key="Space" Invoked="PauseResumeTapped" />
        </xaml:CanvasControl.KeyboardAccelerators>
    </xaml:CanvasControl>
    <TextBlock
        x:Name="TbBanner"
        Grid.Row="1"
        Grid.Column="0"
        Grid.ColumnSpan="3"
        FontSize="72"
        Foreground="{StaticResource Foreground}"
        IsHitTestVisible="False"
        Text="弹幕播放器"
        TextAlignment="Center" />
    <Border
        Grid.Row="0"
        Grid.Column="2"
        Background="Transparent"
        PointerEntered="TitlePointerEntered"
        PointerExited="TitlePointerExited">
        <CommandBar
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            OverflowButtonVisibility="Collapsed"
            Visibility="{x:Bind _vm.PointerInTitleArea, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <AppBarButton Foreground="{StaticResource Foreground}" Tapped="FrontTapped">
                <AppBarButton.Icon>
                    <SymbolIcon Symbol="{x:Bind _vm.TopMost, Converter={StaticResource BoolToPinUnPinSymbolConverter}, Mode=OneWay}" />
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton
                Foreground="{StaticResource Foreground}"
                Icon="Setting"
                Tapped="SettingTapped" />
            <AppBarButton
                Foreground="{StaticResource Foreground}"
                Icon="Cancel"
                Tapped="CloseTapped" />
        </CommandBar>
    </Border>
    <Border
        Grid.Row="0"
        Grid.Column="0"
        Background="Transparent"
        PointerEntered="ImportPointerEntered"
        PointerExited="ImportPointerExited">
        <CommandBar
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            OverflowButtonVisibility="Collapsed"
            Visibility="{x:Bind _vm.PointerInImportArea, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <AppBarButton
                Foreground="{StaticResource Foreground}"
                Icon="Download"
                Tapped="ImportTapped" />
            <AppBarButton
                Foreground="{StaticResource Foreground}"
                Icon="OpenFile"
                Tapped="FileTapped" />
        </CommandBar>
    </Border>
    <Border
        Grid.Row="2"
        Grid.Column="0"
        Grid.ColumnSpan="3"
        Background="Transparent"
        IsHitTestVisible="{x:Bind _vm.StartPlaying, Mode=OneWay}"
        PointerEntered="ControlPointerEntered"
        PointerExited="ControlPointerExited">
        <controls:DockPanel
            Margin="3,0,30,0"
            VerticalAlignment="Bottom"
            Visibility="{x:Bind _vm.PointerInControlArea, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <AppBarButton
                Width="40"
                controls:DockPanel.Dock="Left"
                Foreground="{StaticResource Foreground}"
                LabelPosition="Collapsed"
                Tapped="PauseResumeTapped">
                <AppBarButton.Icon>
                    <SymbolIcon Symbol="{x:Bind _vm.IsPlaying, Converter={StaticResource BoolToPlayPauseSymbolConverter}, Mode=OneWay}" />
                </AppBarButton.Icon>
            </AppBarButton>
            <Grid
                Margin="10,0"
                Background="Transparent"
                Tapped="TimeTextTapped">
                <StackPanel
                    Margin="0"
                    Orientation="Horizontal"
                    Spacing="5"
                    Visibility="{x:Bind _vm.NavigateInputtingTime, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                    <TextBlock
                        VerticalAlignment="Center"
                        controls:DockPanel.Dock="Left"
                        Foreground="{StaticResource Foreground}"
                        Text="{x:Bind _vm.Time, Converter={StaticResource DoubleToTimeTextConverter}, Mode=OneWay}"
                        TextAlignment="Right" />
                    <TextBlock
                        VerticalAlignment="Center"
                        controls:DockPanel.Dock="Left"
                        Foreground="{StaticResource Foreground}"
                        Text="-"
                        TextAlignment="Center" />
                    <TextBlock
                        VerticalAlignment="Center"
                        controls:DockPanel.Dock="Left"
                        Foreground="{StaticResource Foreground}"
                        Text="{x:Bind _vm.TotalTime, Converter={StaticResource DoubleToTimeTextConverter}, Mode=OneWay}"
                        TextAlignment="Left" />
                </StackPanel>
                <TextBox
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    AcceptsReturn="True"
                    BeforeTextChanging="TimeTextBeforeTextChanging"
                    IsEnabled="{x:Bind _vm.InputtingTime, Mode=OneWay}"
                    IsEnabledChanged="TimeTextIsEnabledChanged"
                    LostFocus="TimeTextLostFocus"
                    Text="{x:Bind _vm.DefaultInputTime, Converter={StaticResource DoubleToTimeTextConverter}, Mode=OneWay}"
                    TextAlignment="Center"
                    Visibility="{x:Bind _vm.InputtingTime, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" />
            </Grid>
            <!--
                PointerPressed="TimePointerPressed"
                PointerReleased="TimePointerReleased"
            -->
            <Slider
                VerticalAlignment="Center"
                Maximum="{x:Bind _vm.TotalTime, Mode=OneWay}"
                Minimum="0"
                StepFrequency="0.1"
                ThumbToolTipValueConverter="{StaticResource DoubleToTimeTextConverter}"
                Value="{x:Bind _vm.Time, Mode=TwoWay}" />
        </controls:DockPanel>
    </Border>
    <local:SettingDialog x:Name="DialogSetting" />
    <local:InputDialog x:Name="DialogInput" />
    <TeachingTip x:Name="RootSnackBar" Loaded="TeachingTipOnLoaded" />
</SwapChainPanel>
