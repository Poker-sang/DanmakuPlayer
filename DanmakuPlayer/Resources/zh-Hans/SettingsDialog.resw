<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PlayFramePerSecondCard.Header" xml:space="preserve">
    <value>播放帧数</value>
  </data>
  <data name="DanmakuDurationCard.Header" xml:space="preserve">
    <value>弹幕速度</value>
  </data>
  <data name="DanmakuOpacityCard.Header" xml:space="preserve">
    <value>弹幕透明度</value>
  </data>
  <data name="DanmakuFontCard.Header" xml:space="preserve">
    <value>弹幕字体</value>
  </data>
  <data name="PlayFramePerSecondCard.Description" xml:space="preserve">
    <value>帧数越高弹幕越流畅、内存占用越多（过高可能卡顿甚至崩溃）</value>
  </data>
  <data name="DanmakuDurationCard.Description" xml:space="preserve">
    <value>每条弹幕在屏幕上的停留秒数</value>
  </data>
  <data name="DanmakuOpacityCard.Description" xml:space="preserve">
    <value>弹幕的透明度</value>
  </data>
  <data name="DanmakuFontCard.Description" xml:space="preserve">
    <value>从计算机内已安装的字体搜索</value>
  </data>
  <data name="DanmakuScaleCard.Header" xml:space="preserve">
    <value>弹幕大小</value>
  </data>
  <data name="DanmakuScaleCard.Description" xml:space="preserve">
    <value>弹幕缩放倍数</value>
  </data>
  <data name="DanmakuStrokeExpander.Header" xml:space="preserve">
    <value>弹幕描边</value>
  </data>
  <data name="DanmakuStrokeExpander.Description" xml:space="preserve">
    <value>描边宽度</value>
  </data>
  <data name="DanmakuStrokeColorCard.Header" xml:space="preserve">
    <value>描边颜色</value>
  </data>
  <data name="DanmakuStrokeColorCard.Description" xml:space="preserve">
    <value>弹幕描边的颜色</value>
  </data>
  <data name="DanmakuFiltrationHeader.Text" xml:space="preserve">
    <value>弹幕滤过</value>
  </data>
  <data name="DanmakuMergeExpander.Header" xml:space="preserve">
    <value>弹幕合并</value>
  </data>
  <data name="DanmakuMergeExpander.Description" xml:space="preserve">
    <value>是否合并滚动、底端、顶端弹幕（下次加载弹幕时生效）</value>
  </data>
  <data name="DanmakuMergeMaxDistanceCard.Header" xml:space="preserve">
    <value>编辑距离</value>
  </data>
  <data name="DanmakuMergeMaxDistanceCard.Description" xml:space="preserve">
    <value>内容相近合并（∈[0, 10]）
=0：禁用，≤3：宽松，≤5：中等，≤8：严格</value>
  </data>
  <data name="DanmakuMergeMaxCosineCard.Header" xml:space="preserve">
    <value>向量余弦</value>
  </data>
  <data name="DanmakuMergeMaxCosineCard.Description" xml:space="preserve">
    <value>词频合并（∈[0, 10]）
=10：禁用，≥8：宽松，≥6：中等，≥3：严格</value>
  </data>
  <data name="DanmakuMergeTimeSpanCard.Header" xml:space="preserve">
    <value>时间跨度</value>
  </data>
  <data name="DanmakuMergeTimeSpanCard.Description" xml:space="preserve">
    <value>超过秒数外的相似弹幕不会被合并（∈[0, 60]）</value>
  </data>
  <data name="DanmakuMergeCrossModeCard.Header" xml:space="preserve">
    <value>跨类型</value>
  </data>
  <data name="DanmakuMergeCrossModeCard.Description" xml:space="preserve">
    <value>是否将滚动、顶端、底端模式弹幕相互合并</value>
  </data>
  <data name="DanmakuRegexExpander.Header" xml:space="preserve">
    <value>正则筛选</value>
  </data>
  <data name="DanmakuRegexExpander.Description" xml:space="preserve">
    <value>使用正则表达式屏蔽弹幕（下次加载弹幕时生效）</value>
  </data>
  <data name="AddRegexPatternAutoSuggestBox.PlaceholderText" xml:space="preserve">
    <value>输入一条正则表达式，并点击“+”添加</value>
  </data>
  <data name="DanmakuEnableOverlapCard.Header" xml:space="preserve">
    <value>弹幕重叠</value>
  </data>
  <data name="DanmakuEnableOverlapCard.Description" xml:space="preserve">
    <value>是否允许弹幕重叠</value>
  </data>
  <data name="DanmakuCountLimitExpander.Header" xml:space="preserve">
    <value>弹幕数量</value>
  </data>
  <data name="DanmakuCountLimitExpander.Description" xml:space="preserve">
    <value>弹幕的数量限制</value>
  </data>
  <data name="DanmakuCountRollLimitCard.Header" xml:space="preserve">
    <value>滚动弹幕数量限制</value>
  </data>
  <data name="DanmakuCountBottomLimitCard.Header" xml:space="preserve">
    <value>底端弹幕数量限制</value>
  </data>
  <data name="DanmakuCountTopLimitCard.Header" xml:space="preserve">
    <value>顶端弹幕数量限制</value>
  </data>
  <data name="DanmakuCountInverseLimitCard.Header" xml:space="preserve">
    <value>逆向弹幕数量限制</value>
  </data>
  <data name="AboutHeader.Text" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="MailCard.Header" xml:space="preserve">
    <value>邮箱</value>
  </data>
  <data name="AuthorCard.Header" xml:space="preserve">
    <value>作者</value>
  </data>
  <data name="QqCard.Header" xml:space="preserve">
    <value>QQ</value>
  </data>
  <data name="RepositoryCard.Header" xml:space="preserve">
    <value>仓库</value>
  </data>
  <data name="LicenseCard.Header" xml:space="preserve">
    <value>证书</value>
  </data>
  <data name="LicenseCard.Description" xml:space="preserve">
    <value>GNU General Public License v3.0</value>
  </data>
  <data name="AppForegroundCard.Description" xml:space="preserve">
    <value>应用的前景色</value>
  </data>
  <data name="AppForegroundCard.Header" xml:space="preserve">
    <value>前景色</value>
  </data>
  <data name="AppHeader.Text" xml:space="preserve">
    <value>应用设置</value>
  </data>
  <data name="AppThemeExpander.Description" xml:space="preserve">
    <value>应用的主题色</value>
  </data>
  <data name="AppThemeExpander.Header" xml:space="preserve">
    <value>主题</value>
  </data>
  <data name="PlayFastForwardCard.Description" xml:space="preserve">
    <value>每次快进的秒数</value>
  </data>
  <data name="PlayFastForwardCard.Header" xml:space="preserve">
    <value>快进</value>
  </data>
  <data name="PlayHeader.Text" xml:space="preserve">
    <value>播放设置</value>
  </data>
  <data name="PlaybackRateCard.Description" xml:space="preserve">
    <value>是否按倍速播放</value>
  </data>
  <data name="PlaybackRateCard.Header" xml:space="preserve">
    <value>播放倍速</value>
  </data>
  <data name="RadioButtonDarkTheme.Content" xml:space="preserve">
    <value>深色</value>
  </data>
  <data name="RadioButtonLightTheme.Content" xml:space="preserve">
    <value>浅色</value>
  </data>
  <data name="RadioButtonSystemTheme.Content" xml:space="preserve">
    <value>跟随系统</value>
  </data>
  <data name="RenderBeforeCard.Description" xml:space="preserve">
    <value>提前渲染并存储，会占用更高内存</value>
  </data>
  <data name="RenderBeforeCard.Header" xml:space="preserve">
    <value>提前渲染</value>
  </data>
  <data name="RenderingHeader.Text" xml:space="preserve">
    <value>渲染设置</value>
  </data>
  <data name="SettingsDialog.CloseButtonText" xml:space="preserve">
    <value>保存并关闭</value>
  </data>
  <data name="SettingsDialog.PrimaryButtonText" xml:space="preserve">
    <value>恢复默认设置</value>
  </data>
  <data name="SettingsDialog.Title" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="DanmakuHeader.Text" xml:space="preserve">
    <value>弹幕设置</value>
  </data>
  <data name="Unlimited" xml:space="preserve">
    <value>不限</value>
  </data>
  <data name="DanmakuCountM7EnableCard.Header" xml:space="preserve">
    <value>开启M7高级弹幕</value>
  </data>
  <data name="TopMostCard.Description" xml:space="preserve">
    <value>保持窗口在所有其他窗口之前</value>
  </data>
  <data name="TopMostCard.Header" xml:space="preserve">
    <value>固定最前</value>
  </data>
  <data name="EnableWebView2Card.Description" xml:space="preserve">
    <value>在应用内使用网页，并连接网页中的播放器</value>
  </data>
  <data name="EnableWebView2Card.Header" xml:space="preserve">
    <value>使用WebView2</value>
  </data>
  <data name="LockWebView2Card.Description" xml:space="preserve">
    <value>鼠标、键盘等操作不会输入到WebView2</value>
  </data>
  <data name="LockWebView2Card.Header" xml:space="preserve">
    <value>锁定WebView2</value>
  </data>
  <data name="WebView2Header.Text" xml:space="preserve">
    <value>WebView2设置</value>
  </data>
  <data name="DuplicatesWithExistingRegex" xml:space="preserve">
    <value>与已有正则表达式重复</value>
  </data>
  <data name="RegexCannotBeEmpty" xml:space="preserve">
    <value>正则表达式不能为空</value>
  </data>
</root>